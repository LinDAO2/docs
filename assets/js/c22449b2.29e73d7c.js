"use strict";(self.webpackChunknext_id_doc=self.webpackChunknext_id_doc||[]).push([[6991],{8189:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>k,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=a(6600),r=(a(9496),a(9613)),o=a(9295);const i={id:"ps-glossary",title:"Glossary",sidebar_position:2},s="Glossary",l={unversionedId:"proof-service/ps-glossary",id:"proof-service/ps-glossary",title:"Glossary",description:"Avatar",source:"@site/docs/proof-service/glossary.md",sourceDirName:"proof-service",slug:"/proof-service/ps-glossary",permalink:"/proof-service/ps-glossary",draft:!1,editUrl:"https://github.com/nextdotid/docs/edit/main/docs/proof-service/glossary.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"ps-glossary",title:"Glossary",sidebar_position:2},sidebar:"docs",previous:{title:"Introduction",permalink:"/proof-service/ps-intro"},next:{title:"Flow",permalink:"/proof-service/ps-flow"}},p={},d=[{value:"Avatar",id:"glossary-avatar",level:2},{value:"Identity",id:"glossary-identity",level:2},{value:"Platform",id:"glossary-platform",level:2},{value:"Proof post",id:"glossary-proof-post",level:2},{value:"Binding (Link)",id:"glossary-link",level:2},{value:"Proof Chain",id:"glossary-proof-chain",level:2},{value:"Downgrade",id:"glossary-downgrade",level:2}],f={toc:d};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"glossary"},"Glossary"),(0,r.kt)("h2",{id:"glossary-avatar"},"Avatar"),(0,r.kt)("p",null,"Avatar is the core of user ID network in ProofService."),(0,r.kt)("p",null,"All other ",(0,r.kt)("a",{parentName:"p",href:"#glossary-identity"},"Identities")," (Web2.0 account, blockchain wallet etc.) are ",(0,r.kt)("strong",{parentName:"p"},"only"),"\nbinded with Avatar."),(0,r.kt)(o.G,{chart:"flowchart LR\n\nTwitter <--\x3e|Proof Tweet|Avatar\nAvatar <--\x3e|Sign|EthereumWallet\nGithub <--\x3e|Public Gist|Avatar\nAvatar <--\x3e|Public Message|Discord",mdxType:"Mermaid"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"For now, Avatar is elliptic curve keypair using ",(0,r.kt)("inlineCode",{parentName:"p"},"secp256k1")," curve.")),(0,r.kt)("h2",{id:"glossary-identity"},"Identity"),(0,r.kt)("p",null,"Accounts / Identities on other ",(0,r.kt)("a",{parentName:"p",href:"#glossary-platform"},"Platform")," which is\nbinded with ",(0,r.kt)("a",{parentName:"p",href:"#glossary-avatar"},"Avatar"),"."),(0,r.kt)("p",null,"For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"@my_twitter")," on ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter")," platform, ",(0,r.kt)("inlineCode",{parentName:"p"},"my_github")," on ",(0,r.kt)("inlineCode",{parentName:"p"},"github")," platform."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"See ",(0,r.kt)("a",{parentName:"p",href:"ps-platforms-supported"},"Supported platforms")," for more info.")),(0,r.kt)("h2",{id:"glossary-platform"},"Platform"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#glossary-identity"},"Identity")," provider."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"e.g. Twitter, GitHub, Facebook, Ethereum, etc.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"See ",(0,r.kt)("a",{parentName:"p",href:"ps-platforms-supported"},"Supported platforms")," for more info.")),(0,r.kt)("h2",{id:"glossary-proof-post"},"Proof post"),(0,r.kt)("p",null,'To prove "I have this ',(0,r.kt)("a",{parentName:"p",href:"#glossary-identity"},"identity"),'", user needs to\ntakes an action: use this ',(0,r.kt)("a",{parentName:"p",href:"#glossary-identity"},"identity")," to post an\naccessible, specified content, which is called ",(0,r.kt)("em",{parentName:"p"},"Proof post"),"."),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},'platform: "twitter"'),", proof post should be a public visible tweet."),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},'platform: "github"'),", a public visible ",(0,r.kt)("inlineCode",{parentName:"p"},"Gist"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Proof post shapes different on different ",(0,r.kt)("a",{parentName:"p",href:"#glossary-platform"},"platform"),"."),(0,r.kt)("p",{parentName:"blockquote"},"See ",(0,r.kt)("a",{parentName:"p",href:"ps-platforms-supported"},"Supported platforms")," for more info.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"If ",(0,r.kt)("a",{parentName:"mdxAdmonitionTitle",href:"#glossary-identity"},"Identity")," is cryptography ID"),(0,r.kt)("p",{parentName:"admonition"},"Cryptography ID (e.g. blockchain wallet) don't need to put a proof\npost somewhere, since sigature generating itself can already prove\nthat user owns its private key.")),(0,r.kt)("admonition",{title:"If Proof post is deleted by user",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"See ",(0,r.kt)("a",{parentName:"p",href:"#glossary-downgrade"},"Downgrade"),"\u3002")),(0,r.kt)("h2",{id:"glossary-link"},"Binding (Link)"),(0,r.kt)("p",null,"After ProofService validates ",(0,r.kt)("a",{parentName:"p",href:"#glossary-proof-post"},"Proof post"),' on\nserver side, a binding record of "',(0,r.kt)("a",{parentName:"p",href:"#glossary-avatar"},"Avatar")," <->\n",(0,r.kt)("a",{parentName:"p",href:"#glossary-identity"},"Identity"),'" will be saved into ',(0,r.kt)("a",{parentName:"p",href:"#glossary-proof-chain"},"Proof\nChain"),"."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Struct of Link"),(0,r.kt)("admonition",{title:"Note",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Code below is only a reference of Link, not specific\nimplementation in ProofService or API structure.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="link.d.ts"',title:'"link.d.ts"'},'// assert(signature.match(/0x[a-f0-9]{144}/))\n// Sample:\n// 0x3046022100881328457aa312135c37e1ddf8a129717274ce3f389c176936f5cb44edf04fc4022100be183139154d108ce2e5d6ba16678b0dbeb3b7d70caac2b00b2dad8f81e87790\ntype Signature = string;\n\n// All available chain modification actions\nenum Action {\n    Create = "create",\n    Delete = "delete",\n}\n\n// All supported platforms,\nenum Platform {\n    Twitter = "twitter",\n    Keybase = "keybase",\n}\n\n// Each link in the proof chain\ninterface Link {\n    // If this is genesis link, leave it null; else, it equals\n    // previous link\'s signature. Worked as a pointer.\n    prev: Signature | null;\n    action: Action;\n    platform: Platform;\n    identity: string;\n    // if method === Method.Add, then it must be a string; else, left null\n    proof_location: string | null;\n    // UNIX timestamp (unit: second)\n    created_at: number;\n    // An UUID of this link, works as a global identifier.\n    uuid: string;\n    // Signature of this link made by avatar.\n    signature: Signature;\n}\n'))),(0,r.kt)("h2",{id:"glossary-proof-chain"},"Proof Chain"),(0,r.kt)("p",null,"Each ",(0,r.kt)("a",{parentName:"p",href:"#glossary-link"},"Link")," under the same ",(0,r.kt)("a",{parentName:"p",href:"#glossary-avatar"},"Avatar")," is chained into a link:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Each ",(0,r.kt)("a",{parentName:"li",href:"#glossary-link"},"Link")," has a signature of\n",(0,r.kt)("a",{parentName:"li",href:"#glossary-avatar"},"Avatar"),"."),(0,r.kt)("li",{parentName:"ul"},"Every ",(0,r.kt)("a",{parentName:"li",href:"#glossary-link"},"Link")," (except the first one under this\n",(0,r.kt)("a",{parentName:"li",href:"#glossary-avatar"},"Avatar"),") has its previous\n",(0,r.kt)("a",{parentName:"li",href:"#glossary-link"},"Link"),"'s signature.")),(0,r.kt)("p",null,"So to ensure that ProofService server cannot falsify any of the record\nin the chain without Avatar-provided signature."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Proof Chain mechanism is not picky of storage media. But we will put\nit in Arweave / IPFS in the future, anyway.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Struct of Proof Chain"),(0,r.kt)("admonition",{title:"Note",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Code below is only a reference of Proof Chain, not specific\nimplementation in ProofService or API structure.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="chain.d.ts"',title:'"chain.d.ts"'},'const VERSION = "1";\n\n// assert(public_key.match(/^0x[a-f0-9]{130}$/))\n// Sample:\n// 0x0428b73a2b67a88a47edb15bed5c73a199e24287bb12997c54239e9e6815e24a3032a502d58afe3f36a54f2f7606022907f358d0dd58939cffa0a845c5043ce038\ntype PublicKey = string;\n\ninterface Chain {\n    version: VERSION;\n    avatar: {\n        public_key: PublicKey,\n        curve: "secp256k1",\n    };\n    // See definition of `Link` above.\n    links: Link[];\n}\n'))),(0,r.kt)("h2",{id:"glossary-downgrade"},"Downgrade"),(0,r.kt)("p",null,"ProofService server will periodically check the validity of ",(0,r.kt)("a",{parentName:"p",href:"#glossary-proof-post"},"Proof post"),"."),(0,r.kt)("p",null,"If ",(0,r.kt)("a",{parentName:"p",href:"#glossary-proof-post"},"Proof post")," becomes invalid, this binding\nrecord will be marked as ",(0,r.kt)("inlineCode",{parentName:"p"},'"is_valid": false')," (with reason) in\n",(0,r.kt)("a",{parentName:"p",href:"/rest-api/proofservice-api#proof-query"},"Query API"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"e.g. User deletes ",(0,r.kt)("a",{parentName:"p",href:"#glossary-proof-post"},"Proof tweet")," after creating\na ",(0,r.kt)("a",{parentName:"p",href:"#glossary-link"},"Link"),", but doesn't ",(0,r.kt)("a",{parentName:"p",href:"/rest-api/proofservice-api#proof-add"},"inform"),"\nProofService to delete this link (aka unbind).")),(0,r.kt)("p",null,"ProofService still won't (and can't) do anything to ",(0,r.kt)("a",{parentName:"p",href:"#glossary-proof-chain"},"Proof\nChain")," even downgraded."),(0,r.kt)("p",null,"All ProofService can do is to return ",(0,r.kt)("inlineCode",{parentName:"p"},'"is_valid": false')," in ",(0,r.kt)("a",{parentName:"p",href:"/rest-api/proofservice-api#proof-query"},"Query\nAPI"),"."),(0,r.kt)("p",null,"How to handle this downgraded relationship is entirely up to\napplications using ProofService."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"e.g. showing a \u26a0\ufe0f to user, setting it low priority when presenting, or just omitting it.")))}k.isMDXComponent=!0}}]);