"use strict";(self.webpackChunknext_i_doc=self.webpackChunknext_i_doc||[]).push([[9671],{49613:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(59496);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),f=i,v=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(v,a(a({ref:t},p),{},{components:r})):n.createElement(v,a({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},81977:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var n=r(62848),i=r(79213),o=(r(59496),r(49613)),a=["components"],c={id:"intro",title:"NextID",sidebar_position:1},s="Introduction",l={unversionedId:"intro",id:"intro",title:"NextID",description:"NextID is next-gen decentralised network, for the users.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/nextdotid/docs/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"intro",title:"NextID",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Introduction",permalink:"/docs/proof-service/ps-intro"}},p={},u=[{value:"ProofService",id:"proofservice",level:2},{value:"KVService",id:"kvservice",level:2},{value:"RelationService",id:"relationservice",level:2}],d={toc:u};function f(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"NextID")," is next-gen decentralised network, for the users."),(0,o.kt)("p",null,"Currently, there're 3 components implemented in NextID ecosystem:"),(0,o.kt)("h2",{id:"proofservice"},(0,o.kt)("a",{parentName:"h2",href:"/docs/proof-service/ps-intro"},"ProofService")),(0,o.kt)("p",null,"A DID service to connect 2 identity / social network service by\ncreating a two-way, public, verifiable, falsify-proof,\ncryptography-based binding."),(0,o.kt)("h2",{id:"kvservice"},(0,o.kt)("a",{parentName:"h2",href:"/docs/kv-service/kv-intro"},"KVService")),(0,o.kt)("p",null,"A simple KV-based data preserve / query service, which uses ProofService binding record as namespaces"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Authorized before merging modification"),(0,o.kt)("li",{parentName:"ul"},"History"),(0,o.kt)("li",{parentName:"ul"},"Falsify-proof"),(0,o.kt)("li",{parentName:"ul"},"Verifyable")),(0,o.kt)("h2",{id:"relationservice"},(0,o.kt)("a",{parentName:"h2",href:"/docs/relation-service/intro"},"RelationService")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"TBD")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Work in progress."))),(0,o.kt)("p",null,"Provides a database which is an aggression of existed DID / ID binding\n/ ID query services."))}f.isMDXComponent=!0}}]);