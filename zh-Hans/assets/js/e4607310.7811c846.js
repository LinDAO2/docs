"use strict";(self.webpackChunknext_id_doc=self.webpackChunknext_id_doc||[]).push([[4761],{4055:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var a=r(6600),i=(r(9496),r(9613));r(9295);const n={id:"rs-intro",title:"Introduction",sidebar_position:1},s=void 0,o={unversionedId:"relation-service/rs-intro",id:"relation-service/rs-intro",title:"Introduction",description:'RelationService search other third-party "identity  identity"',source:"@site/docs/relation-service/intro.md",sourceDirName:"relation-service",slug:"/relation-service/rs-intro",permalink:"/zh-Hans/relation-service/rs-intro",draft:!1,editUrl:"https://github.com/nextdotid/docs/edit/main/docs/relation-service/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"rs-intro",title:"Introduction",sidebar_position:1},sidebar:"docs",previous:{title:"FAQ",permalink:"/zh-Hans/kv-service/kv-faq"},next:{title:"System Architecture",permalink:"/zh-Hans/relation-service/rs-system"}},l={},d=[{value:"Data source (Upstreams)",id:"upstreams",level:2},{value:"Features",id:"features",level:2},{value:"Structured query response",id:"structured-query-response",level:3},{value:"GraphQL API",id:"graphql-api",level:3},{value:"Query from an <code>identity</code> or web3 asset",id:"query-from-an-identity-or-web3-asset",level:3},{value:"Stateless",id:"stateless",level:3},{value:"Getting Started",id:"getting-started",level:2}],p={toc:d};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"RelationService"),' search other third-party "identity <-> identity"\nrelation creation / query service, and aggregate the results into one\nquery.'),(0,i.kt)("h2",{id:"upstreams"},"Data source (Upstreams)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../proof-service/ps-intro"},"ProofService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://keybase.io"},"Keybase")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Uniswap/sybil-list/blob/master/verified.json"},"SybilList")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://rss3.io/network/api.html"},"RSS3")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.knn3.xyz/graphql"},"KNN3")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cyberconnect.me"},"CyberConnect")),(0,i.kt)("li",{parentName:"ul"},"ETH Leaderboard"),(0,i.kt)("li",{parentName:"ul"},"TheGraph for",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://thegraph.com/hosted-service/subgraph/ensdomains/ens"},"ENS"))))),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("h3",{id:"structured-query-response"},"Structured query response"),(0,i.kt)("p",null,'"',(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Graph_database"},"Vertex-Edge"),'" style\nresponse for users to recreate the whole identity relation tree within 1 query.'),(0,i.kt)("h3",{id:"graphql-api"},(0,i.kt)("a",{parentName:"h3",href:"./rs-graphql"},"GraphQL API")),(0,i.kt)("p",null,"What you get is what you request. Construct your own query to meet\nyour need."),(0,i.kt)("h3",{id:"query-from-an-identity-or-web3-asset"},"Query from an ",(0,i.kt)("inlineCode",{parentName:"h3"},"identity")," or web3 asset"),(0,i.kt)("p",null,"Start a query by giving one of the following qeury conditions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"platform")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"identity"),", or"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"blockchain")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"nft_type")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"contract_address")," (optional) - ",(0,i.kt)("inlineCode",{parentName:"li"},"nft_id"))),(0,i.kt)("h3",{id:"stateless"},"Stateless"),(0,i.kt)("p",null,"Every identity / relation data is fetched when first requested."),(0,i.kt)("p",null,"No unrecoverable data in DB (which means whole DB can be rebuilt)",(0,i.kt)("sup",{parentName:"p",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),"."),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Check ",(0,i.kt)("a",{parentName:"li",href:"./rs-system"},"System Architecture")," for how RelationService fetch / provide data."),(0,i.kt)("li",{parentName:"ul"},"Check ",(0,i.kt)("a",{parentName:"li",href:"./rs-graphql"},"GraphQL")," for how to use it.")),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-1"},"For now. We may add some RelationService-only data records in the future. Stay tuned.",(0,i.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}u.isMDXComponent=!0}}]);