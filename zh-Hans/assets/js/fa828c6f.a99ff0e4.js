"use strict";(self.webpackChunknext_id_doc=self.webpackChunknext_id_doc||[]).push([[5017],{1548:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=i(6600),o=(i(9496),i(9613));i(9295);const a={id:"kv-faq",title:"FAQ",sidebar_position:5},r=void 0,s={unversionedId:"kv-service/kv-faq",id:"kv-service/kv-faq",title:"FAQ",description:"I got public key mismatch error in POST /v1/kv",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/kv-service/faq.md",sourceDirName:"kv-service",slug:"/kv-service/kv-faq",permalink:"/zh-Hans/kv-service/kv-faq",draft:!1,editUrl:"https://github.com/nextdotid/docs/edit/main/docs/kv-service/faq.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"kv-faq",title:"FAQ",sidebar_position:5}},d={},c=[{value:"I got <code>public key mismatch</code> error in <code>POST /v1/kv</code>",id:"bad-signature",level:2},{value:"Does KVService rely on an existed Persona / binding on ProofService?",id:"does-kvservice-rely-on-an-existed-persona--binding-on-proofservice",level:2}],p={toc:c};function l(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"bad-signature"},"I got ",(0,o.kt)("inlineCode",{parentName:"h2"},"public key mismatch")," error in ",(0,o.kt)("inlineCode",{parentName:"h2"},"POST /v1/kv")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/zh-Hans/proof-service/ps-faq#bad-signature"},"ProofService FAQ"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Double check ",(0,o.kt)("inlineCode",{parentName:"p"},"dataToSign.length")," part.")),(0,o.kt)("h2",{id:"does-kvservice-rely-on-an-existed-persona--binding-on-proofservice"},"Does KVService rely on an existed Persona / binding on ProofService?"),(0,o.kt)("p",null,"Not really! You can use this as a storage for every secp256k1 keypair\n(",(0,o.kt)("inlineCode",{parentName:"p"},'platform == nextid && identity == "0xPUBLIC_KEY"'),") without even\nusing it on ProofService."),(0,o.kt)("p",null,"But, if you want to save data related to a specific account, we still\nencourage you to put it under precise ",(0,o.kt)("inlineCode",{parentName:"p"},"platform")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"identity"),"."),(0,o.kt)("p",null,"A typical case is, your DApp allows user to set different NFT avatar\non Twitter and Github. In this case, ",(0,o.kt)("inlineCode",{parentName:"p"},"platform")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"identity")," should\nbe specified (instead of being put under an ambiguous avatar pubkey)."))}l.isMDXComponent=!0}}]);