"use strict";(self.webpackChunknext_id_doc=self.webpackChunknext_id_doc||[]).push([[1676],{4138:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=t(6600),i=(t(9496),t(9613)),n=t(9295);const o={id:"kv-intro",title:"Introduction",sidebar_position:1},s=void 0,l={unversionedId:"kv-service/kv-intro",id:"kv-service/kv-intro",title:"Introduction",description:"KVService is designed to save/read user data in a traceable and",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/kv-service/intro.md",sourceDirName:"kv-service",slug:"/kv-service/kv-intro",permalink:"/zh-Hans/kv-service/kv-intro",draft:!1,editUrl:"https://github.com/nextdotid/docs/edit/main/docs/kv-service/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"kv-intro",title:"Introduction",sidebar_position:1},sidebar:"docs",previous:{title:"FAQ",permalink:"/zh-Hans/proof-service/ps-faq"},next:{title:"FAQ",permalink:"/zh-Hans/kv-service/kv-faq"}},p={},d=[{value:"Feature",id:"feature",level:2},{value:"Free data structure",id:"free-data-structure",level:3},{value:"Verifiable records",id:"verifiable-records",level:3},{value:"Brief of design",id:"brief-of-design",level:2},{value:"Use case",id:"use-case",level:2},{value:"Workflow",id:"workflow",level:2},{value:"Write data",id:"write-data",level:3},{value:"Query data",id:"query-data",level:3},{value:"Conventions",id:"conventions",level:2}],c={toc:d};function u(e){let{components:a,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"KVService is designed to save/read user data in a traceable and\ndecentralized way."),(0,i.kt)("h2",{id:"feature"},"Feature"),(0,i.kt)("h3",{id:"free-data-structure"},"Free data structure"),(0,i.kt)("p",null,"KVService can store any valid ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON")," ",(0,i.kt)("inlineCode",{parentName:"p"},"object")," data."),(0,i.kt)("h3",{id:"verifiable-records"},"Verifiable records"),(0,i.kt)("p",null,"KVService use the same design of\n",(0,i.kt)("a",{parentName:"p",href:"/zh-Hans/proof-service/ps-intro"},"ProofService"),"'s ",(0,i.kt)("a",{parentName:"p",href:"/zh-Hans/proof-service/ps-glossary#glossary-proof-chain"},"signature\nchain")," to ensure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Traceable: all changes are approved by user and cannot be falsified\nby third parties."),(0,i.kt)("li",{parentName:"ul"},"Decentralized: The user has the full right to dispose the data.")),(0,i.kt)("admonition",{title:"WIP",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"KVService will provide API for signature chain export. Anyone can\nverify each changes, and restore the final data status.")),(0,i.kt)("h2",{id:"brief-of-design"},"Brief of design"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Every user has ",(0,i.kt)("inlineCode",{parentName:"p"},"N + 1")," namespaces\uff1a"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/zh-Hans/proof-service/ps-glossary#glossary-avatar"},"Avatar")," itself has a namespace (",(0,i.kt)("inlineCode",{parentName:"li"},'platform == "nextid" && identity == "0xAVATAR_PUBLIC_KEY"'),")",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"There's no limitation that ",(0,i.kt)("a",{parentName:"li",href:"/zh-Hans/proof-service/ps-glossary#glossary-avatar"},"Avatar")," should be used in ",(0,i.kt)("a",{parentName:"li",href:"/zh-Hans/proof-service/ps-intro"},"ProofService")," once."))),(0,i.kt)("li",{parentName:"ul"},"Each ",(0,i.kt)("a",{parentName:"li",href:"/zh-Hans/proof-service/ps-glossary#glossary-link"},"binding record")," (in ",(0,i.kt)("a",{parentName:"li",href:"/zh-Hans/proof-service/ps-intro"},"ProofService"),") of each ",(0,i.kt)("a",{parentName:"li",href:"/zh-Hans/proof-service/ps-glossary#glossary-avatar"},"Avatar")," has a namespace.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Value of ",(0,i.kt)("inlineCode",{parentName:"li"},"platform")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"identity")," are the same as ",(0,i.kt)("a",{parentName:"li",href:"/zh-Hans/proof-service/ps-platforms-supported"},"definition")," in ProofService."))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/rest-api/kvservice-api#query"},"Query data"),": public, only need to specify ",(0,i.kt)("inlineCode",{parentName:"p"},"avatar"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/rest-api/kvservice-api#payload"},"Write data"),": A patch followed ",(0,i.kt)("a",{parentName:"p",href:"https://www.rfc-editor.org/rfc/rfc7396"},"RFC 7396")," standard."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"A glimpse of RFC7396"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Assume data is:\n{\n  "a": {\n    "b": [2, 3, 4, "test"]\n  },\n  "c": "Hello"\n}\n// If this patch is submitted:\n{ "a": { "b": null, "new_key": true }, "c": "KVService" }\n// Then data will become:\n{\n  "a": {\n    "new_key": true\n  },\n  "c": "KVService"\n}\n// Notice: nedted modification of Array value is not supported.\n//         Replace the whole Array with new value instead.\n'))))),(0,i.kt)("h2",{id:"use-case"},"Use case"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Web3 apps need to save user configurations",(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"e.g. profile (name, avatar link, bio, etc.), NFT showcase (hide/show, order, etc.) or wallet address priority.")))),(0,i.kt)("h2",{id:"workflow"},"Workflow"),(0,i.kt)("h3",{id:"write-data"},"Write data"),(0,i.kt)(n.G,{chart:"sequenceDiagram\n    autonumber\n    actor U as User\n    participant A as Application\n    participant KS as KVService\n\n    U ->> A : (Start a modification request)\n    A ->> KS : POST /v1/kv/payload\n    KS --\x3e> A : sign_payload\n    A ->> U : avatar.eth_avatarlSign(sign_payload)\n    U --\x3e> A : Signature Sp\n    A ->> KS : POST /v1/kv\n    note right of A : With uuid and created_at from \u2462\n    KS --\x3e> A : Success\n    A --\x3e> U : Success",mdxType:"Mermaid"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"APIs mentioned:"),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/rest-api/kvservice-api#payload"},"POST /v1/kv/payload")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/rest-api/kvservice-api#patch"},"POST /v1/kv")))),(0,i.kt)("h3",{id:"query-data"},"Query data"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/rest-api/kvservice-api#query"},"GET /v1/kv"),"."),(0,i.kt)("h2",{id:"conventions"},"Conventions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Each app should use their "package name" as their own namespace, to ensure other apps are not infected by your modification.'),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"For example, my app is ",(0,i.kt)("inlineCode",{parentName:"p"},"io.mask.web3-profile-plugin"),","),(0,i.kt)("p",{parentName:"blockquote"},"Then I should make all my modification under ",(0,i.kt)("inlineCode",{parentName:"p"},'{ "io.mask.web3-profile-plugin": .... }')," key."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Theoretically, there is no size limitation for data. FairUse\u2122\ufe0f, please."),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"If you want to store data bigger than string, consider ",(0,i.kt)("a",{parentName:"p",href:"https://www.arweave.org"},"Arweave"),".")))))}u.isMDXComponent=!0}}]);